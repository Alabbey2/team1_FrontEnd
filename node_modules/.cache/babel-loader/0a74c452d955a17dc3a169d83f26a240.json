{"ast":null,"code":"var _jsxFileName = \"/home/chiranjibi/Desktop/School/Telia_project/team1_FrontEnd-1/client/src/pages/JobEditPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Select from 'react-select';\nimport Input from '../../Components/Input';\nimport InputSelect from '../../Components/InputSelect';\nimport Textarea from '../../Components/Textarea';\nimport Button from '../../Components/Button';\nimport { useForm } from '../../hooks/useForm';\nimport { techOptions } from '../../Utils/selectOptions';\nimport './JobEditPage.scss';\nimport { editJob, getOneJob } from '../../services/jobService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobEditPage = ({\n  match\n}) => {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = match.params;\n  const [job, setJob] = useState('');\n  const [level, setLevel] = useState(job.level);\n  const [type, setType] = useState(job.type);\n  const [techList, setTechList] = useState([]);\n  const [fields, setFields] = useForm({\n    title: '',\n    deadline: '',\n    location: '',\n    description: ''\n  });\n  const {\n    title,\n    deadline,\n    location,\n    description\n  } = fields;\n  const defaultTechs = job && job.techs.map(item => {\n    return {\n      label: item,\n      value: item\n    };\n  });\n\n  const updateJob = e => {\n    e.preventDefault();\n    const updates = {\n      title,\n      deadline,\n      location,\n      description,\n      level,\n      type,\n      techs: techList\n    };\n    editJob(id, updates).then(response => {\n      if (response.data) {\n        history.push(`/companyProfile/${job.company}`);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getOneJob(id).then(response => {\n      if (response.data) {\n        setJob(response.data);\n      }\n    });\n  }, []);\n  console.log('testjob--', job);\n  const selectStyles = {\n    control: styles => ({ ...styles,\n      minHeight: '48px',\n      marginBottom: '10px',\n      marginTop: '10px'\n    })\n  };\n\n  const handleChangeTech = options => {\n    const techs = options.map(opt => opt.value);\n    setTechList(techs);\n  };\n\n  return job && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-edit\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"job-edit__heading\",\n      children: \"EDIT JOB DETAILS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"job-edit__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"job-edit__label\",\n        children: \"Job title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Job Title\",\n        id: \"title\",\n        defaultValue: job.title,\n        handleInputChange: setFields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"job-edit__label\",\n        children: \"Deadline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Deadline\",\n        id: \"deadline\",\n        defaultValue: job.deadline,\n        handleInputChange: setFields,\n        handleFocus: e => e.target.type = 'date'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"job-edit__label\",\n        children: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"City, Country role based on\",\n        id: \"location\",\n        defaultValue: job.location,\n        handleInputChange: setFields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"job-edit__label\",\n        children: \"Job Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        maxLength: 300,\n        placeholder: \"Job Description\",\n        id: \"description\",\n        defaultValue: job.description,\n        handleInputChange: setFields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"job-edit__label\",\n        children: \"Seniority Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        defaultValue: job.level,\n        handleInputChange: e => setLevel(e.target.value),\n        placeholder: \"Select seniority\",\n        options: ['Junior', 'Mid-Senior', 'Senior', 'Internship']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"job-edit__label\",\n        children: \"Job Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        handleInputChange: e => setType(e.target.value),\n        placeholder: \"Select Job-type\",\n        options: ['Full-time', 'Part-time']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"job-edit__label\",\n        children: \"Tech Stack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: defaultTechs,\n        placeholder: \"select techs\",\n        onChange: handleChangeTech,\n        styles: selectStyles,\n        isMulti: true,\n        name: \"tech\",\n        options: techOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-edit__btn-div\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          modifier: \"light\",\n          text: \"Update\",\n          handleClick: updateJob\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n};\n\n_s(JobEditPage, \"meu0GpR4UvFdnIeGXGliO4yj3p4=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = JobEditPage;\nexport default JobEditPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobEditPage\");","map":{"version":3,"sources":["/home/chiranjibi/Desktop/School/Telia_project/team1_FrontEnd-1/client/src/pages/JobEditPage/index.js"],"names":["React","useState","useEffect","useHistory","Select","Input","InputSelect","Textarea","Button","useForm","techOptions","editJob","getOneJob","JobEditPage","match","history","id","params","job","setJob","level","setLevel","type","setType","techList","setTechList","fields","setFields","title","deadline","location","description","defaultTechs","techs","map","item","label","value","updateJob","e","preventDefault","updates","then","response","data","push","company","console","log","selectStyles","control","styles","minHeight","marginBottom","marginTop","handleChangeTech","options","opt","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,OAAO,oBAAP;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,2BAAnC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACjC,QAAMC,OAAO,GAAGZ,UAAU,EAA1B;AACA,QAAM;AAAEa,IAAAA;AAAF,MAASF,KAAK,CAACG,MAArB;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBlB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAACiB,GAAG,CAACE,KAAL,CAAlC;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAACiB,GAAG,CAACI,IAAL,CAAhC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsBlB,OAAO,CAAC;AAClCmB,IAAAA,KAAK,EAAE,EAD2B;AAElCC,IAAAA,QAAQ,EAAE,EAFwB;AAGlCC,IAAAA,QAAQ,EAAE,EAHwB;AAIlCC,IAAAA,WAAW,EAAE;AAJqB,GAAD,CAAnC;AAOA,QAAM;AAAEH,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,MAA6CL,MAAnD;AAEA,QAAMM,YAAY,GAChBd,GAAG,IACHA,GAAG,CAACe,KAAJ,CAAUC,GAAV,CAAeC,IAAD,IAAU;AACtB,WAAO;AAAEC,MAAAA,KAAK,EAAED,IAAT;AAAeE,MAAAA,KAAK,EAAEF;AAAtB,KAAP;AACD,GAFD,CAFF;;AAMA,QAAMG,SAAS,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,OAAO,GAAG;AAAEb,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA,QAAnB;AAA6BC,MAAAA,WAA7B;AAA0CX,MAAAA,KAA1C;AAAiDE,MAAAA,IAAjD;AAAuDW,MAAAA,KAAK,EAAET;AAA9D,KAAhB;AACAb,IAAAA,OAAO,CAACK,EAAD,EAAKyB,OAAL,CAAP,CAAqBC,IAArB,CAA2BC,QAAD,IAAc;AACtC,UAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjB7B,QAAAA,OAAO,CAAC8B,IAAR,CAAc,mBAAkB3B,GAAG,CAAC4B,OAAQ,EAA5C;AACD;AACF,KAJD;AAKD,GARD;;AAUA5C,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS,CAACI,EAAD,CAAT,CAAc0B,IAAd,CAAoBC,QAAD,IAAc;AAC/B,UAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjBzB,QAAAA,MAAM,CAACwB,QAAQ,CAACC,IAAV,CAAN;AACD;AACF,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQAG,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB9B,GAAzB;AAEA,QAAM+B,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAGC,MAAD,KAAa,EAAE,GAAGA,MAAL;AAAaC,MAAAA,SAAS,EAAE,MAAxB;AAAgCC,MAAAA,YAAY,EAAE,MAA9C;AAAsDC,MAAAA,SAAS,EAAE;AAAjE,KAAb;AADU,GAArB;;AAIA,QAAMC,gBAAgB,GAAIC,OAAD,IAAa;AACpC,UAAMvB,KAAK,GAAGuB,OAAO,CAACtB,GAAR,CAAauB,GAAD,IAASA,GAAG,CAACpB,KAAzB,CAAd;AACAZ,IAAAA,WAAW,CAACQ,KAAD,CAAX;AACD,GAHD;;AAKA,SACEf,GAAG,iBACD;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,WAFd;AAGE,QAAA,EAAE,EAAC,OAHL;AAIE,QAAA,YAAY,EAAEA,GAAG,CAACU,KAJpB;AAKE,QAAA,iBAAiB,EAAED;AALrB;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,EAAE,EAAC,UAHL;AAIE,QAAA,YAAY,EAAET,GAAG,CAACW,QAJpB;AAKE,QAAA,iBAAiB,EAAEF,SALrB;AAME,QAAA,WAAW,EAAGY,CAAD,IAAQA,CAAC,CAACmB,MAAF,CAASpC,IAAT,GAAgB;AANvC;AAAA;AAAA;AAAA;AAAA,cAVF,eAkBE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,6BAFd;AAGE,QAAA,EAAE,EAAC,UAHL;AAIE,QAAA,YAAY,EAAEJ,GAAG,CAACY,QAJpB;AAKE,QAAA,iBAAiB,EAAEH;AALrB;AAAA;AAAA;AAAA;AAAA,cAnBF,eA0BE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF,eA2BE,QAAC,QAAD;AACE,QAAA,SAAS,EAAE,GADb;AAEE,QAAA,WAAW,EAAC,iBAFd;AAGE,QAAA,EAAE,EAAC,aAHL;AAIE,QAAA,YAAY,EAAET,GAAG,CAACa,WAJpB;AAKE,QAAA,iBAAiB,EAAEJ;AALrB;AAAA;AAAA;AAAA;AAAA,cA3BF,eAkCE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCF,eAmCE,QAAC,WAAD;AACE,QAAA,YAAY,EAAET,GAAG,CAACE,KADpB;AAEE,QAAA,iBAAiB,EAAGmB,CAAD,IAAOlB,QAAQ,CAACkB,CAAC,CAACmB,MAAF,CAASrB,KAAV,CAFpC;AAGE,QAAA,WAAW,EAAC,kBAHd;AAIE,QAAA,OAAO,EAAE,CAAC,QAAD,EAAW,YAAX,EAAyB,QAAzB,EAAmC,YAAnC;AAJX;AAAA;AAAA;AAAA;AAAA,cAnCF,eAyCE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCF,eA0CE,QAAC,WAAD;AACE,QAAA,iBAAiB,EAAGE,CAAD,IAAOhB,OAAO,CAACgB,CAAC,CAACmB,MAAF,CAASrB,KAAV,CADnC;AAEE,QAAA,WAAW,EAAC,iBAFd;AAGE,QAAA,OAAO,EAAE,CAAC,WAAD,EAAc,WAAd;AAHX;AAAA;AAAA;AAAA;AAAA,cA1CF,eA+CE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/CF,eAgDE,QAAC,MAAD;AACE,QAAA,YAAY,EAAEL,YADhB;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,QAAQ,EAAEuB,gBAHZ;AAIE,QAAA,MAAM,EAAEN,YAJV;AAKE,QAAA,OAAO,MALT;AAME,QAAA,IAAI,EAAC,MANP;AAOE,QAAA,OAAO,EAAEvC;AAPX;AAAA;AAAA;AAAA;AAAA,cAhDF,eA0DE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAC,OAAjB;AAAyB,UAAA,IAAI,EAAC,QAA9B;AAAuC,UAAA,WAAW,EAAE4B;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1DF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsED,CAzHD;;GAAMzB,W;UACYV,U,EAMYM,O;;;KAPxBI,W;AA2HN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Select from 'react-select';\n\nimport Input from '../../Components/Input';\nimport InputSelect from '../../Components/InputSelect';\nimport Textarea from '../../Components/Textarea';\nimport Button from '../../Components/Button';\nimport { useForm } from '../../hooks/useForm';\nimport { techOptions } from '../../Utils/selectOptions';\n\nimport './JobEditPage.scss';\nimport { editJob, getOneJob } from '../../services/jobService';\n\nconst JobEditPage = ({ match }) => {\n  const history = useHistory();\n  const { id } = match.params;\n  const [job, setJob] = useState('');\n  const [level, setLevel] = useState(job.level);\n  const [type, setType] = useState(job.type);\n  const [techList, setTechList] = useState([]);\n  const [fields, setFields] = useForm({\n    title: '',\n    deadline: '',\n    location: '',\n    description: ''\n  });\n\n  const { title, deadline, location, description } = fields;\n\n  const defaultTechs =\n    job &&\n    job.techs.map((item) => {\n      return { label: item, value: item };\n    });\n\n  const updateJob = (e) => {\n    e.preventDefault();\n    const updates = { title, deadline, location, description, level, type, techs: techList };\n    editJob(id, updates).then((response) => {\n      if (response.data) {\n        history.push(`/companyProfile/${job.company}`);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getOneJob(id).then((response) => {\n      if (response.data) {\n        setJob(response.data);\n      }\n    });\n  }, []);\n\n  console.log('testjob--', job);\n\n  const selectStyles = {\n    control: (styles) => ({ ...styles, minHeight: '48px', marginBottom: '10px', marginTop: '10px' })\n  };\n\n  const handleChangeTech = (options) => {\n    const techs = options.map((opt) => opt.value);\n    setTechList(techs);\n  };\n\n  return (\n    job && (\n      <div className=\"job-edit\">\n        <h3 className=\"job-edit__heading\">EDIT JOB DETAILS</h3>\n\n        <form className=\"job-edit__form\">\n          <p className=\"job-edit__label\">Job title</p>\n          <Input\n            type=\"text\"\n            placeholder=\"Job Title\"\n            id=\"title\"\n            defaultValue={job.title}\n            handleInputChange={setFields}\n          />\n          <p className=\"job-edit__label\">Deadline</p>\n          <Input\n            type=\"text\"\n            placeholder=\"Deadline\"\n            id=\"deadline\"\n            defaultValue={job.deadline}\n            handleInputChange={setFields}\n            handleFocus={(e) => (e.target.type = 'date')}\n          />\n          <p className=\"job-edit__label\">Location</p>\n          <Input\n            type=\"text\"\n            placeholder=\"City, Country role based on\"\n            id=\"location\"\n            defaultValue={job.location}\n            handleInputChange={setFields}\n          />\n          <p className=\"job-edit__label\">Job Description</p>\n          <Textarea\n            maxLength={300}\n            placeholder=\"Job Description\"\n            id=\"description\"\n            defaultValue={job.description}\n            handleInputChange={setFields}\n          />\n          <p className=\"job-edit__label\">Seniority Level</p>\n          <InputSelect\n            defaultValue={job.level}\n            handleInputChange={(e) => setLevel(e.target.value)}\n            placeholder=\"Select seniority\"\n            options={['Junior', 'Mid-Senior', 'Senior', 'Internship']}\n          />\n          <p className=\"job-edit__label\">Job Type</p>\n          <InputSelect\n            handleInputChange={(e) => setType(e.target.value)}\n            placeholder=\"Select Job-type\"\n            options={['Full-time', 'Part-time']}\n          />\n          <p className=\"job-edit__label\">Tech Stack</p>\n          <Select\n            defaultValue={defaultTechs}\n            placeholder=\"select techs\"\n            onChange={handleChangeTech}\n            styles={selectStyles}\n            isMulti\n            name=\"tech\"\n            options={techOptions}\n          />\n\n          <div className=\"job-edit__btn-div\">\n            <Button modifier=\"light\" text=\"Update\" handleClick={updateJob} />\n          </div>\n        </form>\n      </div>\n    )\n  );\n};\n\nexport default JobEditPage;\n"]},"metadata":{},"sourceType":"module"}