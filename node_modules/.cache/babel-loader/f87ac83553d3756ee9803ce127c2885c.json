{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { getMatches } from '../services/matchService';\nexport const useMatchData = (userType, userId) => {\n  _s();\n\n  const [matchData, setMatchData] = useState([]);\n  const [isMatched, setIsMatched] = useState(false);\n\n  const fetchData = async () => {\n    console.log(userType, userId);\n    await getMatches(userType, userId).then(response => {\n      setMatchData(response.data);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [userId, isMatched]);\n  return [matchData, setIsMatched];\n};\n\n_s(useMatchData, \"n9GRwyWA3U8rTScJ8KrgnJrbo6g=\");","map":{"version":3,"sources":["/home/chiranjibi/Desktop/School/Telia_project/team1_FrontEnd-1/client/src/hooks/useMatchData.js"],"names":["useState","useEffect","getMatches","useMatchData","userType","userId","matchData","setMatchData","isMatched","setIsMatched","fetchData","console","log","then","response","data"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAAA;;AAChD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMU,SAAS,GAAG,YAAY;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAAsBC,MAAtB;AACA,UAAMH,UAAU,CAACE,QAAD,EAAWC,MAAX,CAAV,CAA6BQ,IAA7B,CAAmCC,QAAD,IAAc;AACpDP,MAAAA,YAAY,CAACO,QAAQ,CAACC,IAAV,CAAZ;AACD,KAFK,CAAN;AAGD,GALD;;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACL,MAAD,EAASG,SAAT,CAFM,CAAT;AAIA,SAAO,CAACF,SAAD,EAAYG,YAAZ,CAAP;AACD,CAhBM;;GAAMN,Y","sourcesContent":["import { useState, useEffect } from 'react';\nimport { getMatches } from '../services/matchService';\n\nexport const useMatchData = (userType, userId) => {\n  const [matchData, setMatchData] = useState([]);\n  const [isMatched, setIsMatched] = useState(false);\n\n  const fetchData = async () => {\n    console.log(userType, userId);\n    await getMatches(userType, userId).then((response) => {\n      setMatchData(response.data);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [userId, isMatched]);\n\n  return [matchData, setIsMatched];\n};\n"]},"metadata":{},"sourceType":"module"}