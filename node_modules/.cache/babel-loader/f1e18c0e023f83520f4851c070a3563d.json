{"ast":null,"code":"var _jsxFileName = \"/home/chiranjibi/Desktop/School/Telia_project/team1_FrontEnd-1/client/src/Components/Navigation/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport Button from '../Button';\nimport Input from '../Input';\nimport ProfileDropdown from '../ProfileDropdown';\nimport { useForm } from '../../hooks/useForm';\nimport { logUser } from '../../services/login';\nimport logo from \"../../Assets/final_logo.svg\";\nimport profilePic from '../../Assets/proifle.jpeg';\nimport './Navigation.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\n\nfunction Navigation() {\n  _s();\n\n  const history = useHistory();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('duuni-app')));\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toForgotPassword = () => {\n    history.push('./forgotpassword');\n  };\n\n  const [fields, setFields] = useForm({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = fields;\n  const customStyles = {\n    content: {\n      background: '#17252a',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)'\n    }\n  };\n\n  const handleLogin = e => {\n    e.preventDefault();\n    const credentials = {\n      email,\n      password\n    };\n    logUser(credentials).then(response => {\n      if (response.data) {\n        setIsModalOpen(false);\n        setUser(response.data);\n        localStorage.setItem('duuni-app', JSON.stringify(response.data));\n        history.push('/');\n      }\n    });\n  };\n\n  const handleLogout = e => {\n    e.preventDefault();\n    setUser(null);\n    localStorage.removeItem('duuni-app');\n    setIsDropdownOpen(false);\n    history.push('/landingPage');\n  };\n\n  const handleProfile = () => {\n    if (user.userInfo.userType === 'talent') {\n      history.push(`/employeeProfile/${user.userInfo.userId}`);\n      setIsDropdownOpen(false);\n    } else {\n      history.push(`/companyProfile/${user.userInfo.userId}`);\n      setIsDropdownOpen(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"nav__logo\",\n      src: logo,\n      alt: \"logo\",\n      onClick: () => history.push('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav__profile-div\",\n      children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsDropdownOpen(!isDropdownOpen),\n        className: \"nav__user-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"nav__profile-photo\",\n          src: user.userInfo.photo ? user.userInfo.photo : profilePic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav__profile-name\",\n          children: user.userInfo.name ? user.userInfo.name : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Login\",\n        modifier: \"nav\",\n        handleClick: () => setIsModalOpen(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      style: customStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsModalOpen(false),\n        className: \"close\",\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"login-content__title\",\n          children: \"LOG IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"email\",\n          value: email,\n          handleInputChange: setFields,\n          type: \"email\",\n          placeholder: \"Email\",\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"password\",\n          value: password,\n          handleInputChange: setFields,\n          type: \"password\",\n          placeholder: \"Password\",\n          label: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-content__btn-div\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            modifier: \"light\",\n            text: \"Login\",\n            handleClick: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-content__text\",\n          children: [\"Forgot password?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: toForgotPassword,\n            className: \"login-content__text-link \",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isDropdownOpen ? 'nav__dropdown-div' : 'nav__dropdown-div nav__dropdown-div--close',\n      children: /*#__PURE__*/_jsxDEV(ProfileDropdown, {\n        setIsModalOpen: setIsDropdownOpen,\n        handleExit: handleLogout,\n        handleEdit: handleProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Navigation, \"VKs+GLK8if5t2d3rV4VTXKJDLBk=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["/home/chiranjibi/Desktop/School/Telia_project/team1_FrontEnd-1/client/src/Components/Navigation/index.js"],"names":["React","useState","useHistory","Modal","Button","Input","ProfileDropdown","useForm","logUser","profilePic","setAppElement","Navigation","history","user","setUser","JSON","parse","localStorage","getItem","isDropdownOpen","setIsDropdownOpen","isModalOpen","setIsModalOpen","toForgotPassword","push","fields","setFields","email","password","customStyles","content","background","top","left","right","bottom","transform","handleLogin","e","preventDefault","credentials","then","response","data","setItem","stringify","handleLogout","removeItem","handleProfile","userInfo","userType","userId","logo","photo","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Modal from 'react-modal';\n\nimport Button from '../Button';\nimport Input from '../Input';\nimport ProfileDropdown from '../ProfileDropdown';\nimport { useForm } from '../../hooks/useForm';\nimport { logUser } from '../../services/login';\n\nimport logo from '../../Assets/final_logo.svg';\nimport profilePic from '../../Assets/proifle.jpeg';\n\nimport './Navigation.scss';\n\nModal.setAppElement('#root');\nfunction Navigation() {\n  const history = useHistory();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('duuni-app')));\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toForgotPassword = () => {\n    history.push('./forgotpassword');\n  };\n\n  const [fields, setFields] = useForm({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = fields;\n\n  const customStyles = {\n    content: {\n      background: '#17252a',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)'\n    }\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const credentials = { email, password };\n    logUser(credentials).then((response) => {\n      if (response.data) {\n        setIsModalOpen(false);\n        setUser(response.data);\n        localStorage.setItem('duuni-app', JSON.stringify(response.data));\n        history.push('/');\n      }\n    });\n  };\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    setUser(null);\n    localStorage.removeItem('duuni-app');\n    setIsDropdownOpen(false);\n    history.push('/landingPage');\n  };\n\n  const handleProfile = () => {\n    if (user.userInfo.userType === 'talent') {\n      history.push(`/employeeProfile/${user.userInfo.userId}`);\n      setIsDropdownOpen(false);\n    } else {\n      history.push(`/companyProfile/${user.userInfo.userId}`);\n      setIsDropdownOpen(false);\n    }\n  };\n\n  return (\n    <div className=\"nav\">\n      <img className=\"nav__logo\" src={logo} alt=\"logo\" onClick={() => history.push('/')} />\n      <div className=\"nav__profile-div\">\n        {user ? (\n          <div onClick={() => setIsDropdownOpen(!isDropdownOpen)} className=\"nav__user-div\">\n            <img\n              className=\"nav__profile-photo\"\n              src={user.userInfo.photo ? user.userInfo.photo : profilePic}\n            />\n            <span className=\"nav__profile-name\">\n              {user.userInfo.name ? user.userInfo.name : ''}\n            </span>\n          </div>\n        ) : (\n          <Button text=\"Login\" modifier=\"nav\" handleClick={() => setIsModalOpen(true)} />\n        )}\n      </div>\n      <Modal isOpen={isModalOpen} style={customStyles}>\n        <div onClick={() => setIsModalOpen(false)} className=\"close\">\n          X\n        </div>\n        <div className=\"login-content\">\n          <h1 className=\"login-content__title\">LOG IN</h1>\n          <Input\n            id=\"email\"\n            value={email}\n            handleInputChange={setFields}\n            type=\"email\"\n            placeholder=\"Email\"\n            label=\"Email\"\n          />\n          <Input\n            id=\"password\"\n            value={password}\n            handleInputChange={setFields}\n            type=\"password\"\n            placeholder=\"Password\"\n            label=\"Password\"\n          />\n          <div className=\"login-content__btn-div\">\n            <Button modifier=\"light\" text=\"Login\" handleClick={handleLogin} />\n          </div>\n          <p className=\"login-content__text\">\n            Forgot password?{' '}\n            <span onClick={toForgotPassword} className=\"login-content__text-link \">\n              Reset\n            </span>\n          </p>\n        </div>\n      </Modal>\n      <div\n        className={\n          isDropdownOpen ? 'nav__dropdown-div' : 'nav__dropdown-div nav__dropdown-div--close'\n        }\n      >\n        <ProfileDropdown\n          setIsModalOpen={setIsDropdownOpen}\n          handleExit={handleLogout}\n          handleEdit={handleProfile}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}