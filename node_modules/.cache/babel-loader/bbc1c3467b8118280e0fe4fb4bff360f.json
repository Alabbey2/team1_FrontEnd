{"ast":null,"code":"var _jsxFileName = \"/home/chiranjibi/Desktop/School/Telia_project/team1_FrontEnd-1/src/pages/JobEditPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Select from 'react-select';\nimport Input from '../../Components/Input';\nimport InputSelect from '../../Components/InputSelect';\nimport Textarea from '../../Components/Textarea';\nimport Button from '../../Components/Button';\nimport { useForm } from '../../hooks/useForm';\nimport { techOptions } from '../../Utils/selectOptions';\nimport './JobEditPage.scss';\nimport { editJob, getOneJob } from '../../services/jobService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobEditPage = ({\n  match\n}) => {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = match.params;\n  const [job, setJob] = useState('');\n  const [level, setLevel] = useState(job.level);\n  const [type, setType] = useState(job.type);\n  const [techList, setTechList] = useState([]);\n  const [error, setError] = useState('');\n  const [fields, setFields] = useForm({\n    title: '',\n    deadline: '',\n    location: '',\n    description: ''\n  });\n  const {\n    title,\n    deadline,\n    location,\n    description\n  } = fields;\n  const defaultTechs = job && job.techs.map(item => {\n    return {\n      label: item,\n      value: item\n    };\n  });\n\n  const updateJob = e => {\n    e.preventDefault();\n    const updates = {\n      title,\n      deadline,\n      location,\n      description,\n      level,\n      type,\n      techs: techList\n    };\n    editJob(id, updates).then(response => {\n      if (response.data) {\n        history.push(`/companyProfile/${job.company}`);\n      }\n    }).then(error => {\n      setError(error && error.response.data.Error);\n    });\n  };\n\n  useEffect(() => {\n    getOneJob(id).then(response => {\n      if (response.data) {\n        setJob(response.data);\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const selectStyles = {\n    control: styles => ({ ...styles,\n      minHeight: '48px',\n      marginBottom: '10px',\n      marginTop: '10px'\n    })\n  };\n\n  const handleChangeTech = options => {\n    const techs = options.map(opt => opt.value);\n    setTechList(techs);\n  };\n\n  return job && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-edit\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"job-edit__heading\",\n      children: \"EDIT JOB DETAILS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"job-edit__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: error ? 'job-edit__error ' : 'job-edit__error--hidden',\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Job Title\",\n        type: \"text\",\n        placeholder: \"Job Title\",\n        id: \"title\",\n        defaultValue: job.title,\n        handleInputChange: setFields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Application deadline\",\n        type: \"text\",\n        placeholder: \"Deadline\",\n        id: \"deadline\",\n        defaultValue: job.deadline,\n        handleInputChange: setFields,\n        handleFocus: e => e.target.type = 'date'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Location\",\n        type: \"text\",\n        placeholder: \"City, Country role based on\",\n        id: \"location\",\n        defaultValue: job.location,\n        handleInputChange: setFields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        label: \"Job Description\",\n        maxLength: 300,\n        placeholder: \"Job Description\",\n        id: \"description\",\n        defaultValue: job.description,\n        handleInputChange: setFields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        label: \"Seniority Level\",\n        defaultValue: job.level,\n        handleInputChange: e => setLevel(e.target.value),\n        placeholder: \"Select seniority\",\n        options: ['Junior', 'Mid-Senior', 'Senior', 'Internship']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        label: \"Job Type\",\n        handleInputChange: e => setType(e.target.value),\n        placeholder: \"Select Job-type\",\n        options: ['Full-time', 'Part-time']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"job-edit__label\",\n        children: \"Tech Stack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: defaultTechs,\n        placeholder: \"select techs\",\n        onChange: handleChangeTech,\n        styles: selectStyles,\n        isMulti: true,\n        name: \"tech\",\n        options: techOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-edit__btn-div\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          modifier: \"light\",\n          text: \"Update\",\n          handleClick: updateJob\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }, this);\n};\n\n_s(JobEditPage, \"tHZbY2CaUCdfEdpUtRJfXtk0IfI=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = JobEditPage;\nexport default JobEditPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobEditPage\");","map":{"version":3,"sources":["/home/chiranjibi/Desktop/School/Telia_project/team1_FrontEnd-1/src/pages/JobEditPage/index.js"],"names":["React","useState","useEffect","useHistory","Select","Input","InputSelect","Textarea","Button","useForm","techOptions","editJob","getOneJob","JobEditPage","match","history","id","params","job","setJob","level","setLevel","type","setType","techList","setTechList","error","setError","fields","setFields","title","deadline","location","description","defaultTechs","techs","map","item","label","value","updateJob","e","preventDefault","updates","then","response","data","push","company","Error","selectStyles","control","styles","minHeight","marginBottom","marginTop","handleChangeTech","options","opt","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Select from 'react-select';\n\nimport Input from '../../Components/Input';\nimport InputSelect from '../../Components/InputSelect';\nimport Textarea from '../../Components/Textarea';\nimport Button from '../../Components/Button';\nimport { useForm } from '../../hooks/useForm';\nimport { techOptions } from '../../Utils/selectOptions';\n\nimport './JobEditPage.scss';\nimport { editJob, getOneJob } from '../../services/jobService';\n\nconst JobEditPage = ({ match }) => {\n  const history = useHistory();\n  const { id } = match.params;\n  const [job, setJob] = useState('');\n  const [level, setLevel] = useState(job.level);\n  const [type, setType] = useState(job.type);\n  const [techList, setTechList] = useState([]);\n  const [error, setError] = useState('');\n  const [fields, setFields] = useForm({\n    title: '',\n    deadline: '',\n    location: '',\n    description: '',\n  });\n\n  const { title, deadline, location, description } = fields;\n\n  const defaultTechs =\n    job &&\n    job.techs.map((item) => {\n      return { label: item, value: item };\n    });\n\n  const updateJob = (e) => {\n    e.preventDefault();\n    const updates = {\n      title,\n      deadline,\n      location,\n      description,\n      level,\n      type,\n      techs: techList,\n    };\n    editJob(id, updates)\n      .then((response) => {\n        if (response.data) {\n          history.push(`/companyProfile/${job.company}`);\n        }\n      })\n      .then((error) => {\n        setError(error && error.response.data.Error);\n      });\n  };\n\n  useEffect(() => {\n    getOneJob(id).then((response) => {\n      if (response.data) {\n        setJob(response.data);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const selectStyles = {\n    control: (styles) => ({\n      ...styles,\n      minHeight: '48px',\n      marginBottom: '10px',\n      marginTop: '10px',\n    }),\n  };\n\n  const handleChangeTech = (options) => {\n    const techs = options.map((opt) => opt.value);\n    setTechList(techs);\n  };\n\n  return (\n    job && (\n      <div className=\"job-edit\">\n        <h3 className=\"job-edit__heading\">EDIT JOB DETAILS</h3>\n\n        <form className=\"job-edit__form\">\n          <p className={error ? 'job-edit__error ' : 'job-edit__error--hidden'}>\n            {error}\n          </p>\n          <Input\n            label=\"Job Title\"\n            type=\"text\"\n            placeholder=\"Job Title\"\n            id=\"title\"\n            defaultValue={job.title}\n            handleInputChange={setFields}\n          />\n          <Input\n            label=\"Application deadline\"\n            type=\"text\"\n            placeholder=\"Deadline\"\n            id=\"deadline\"\n            defaultValue={job.deadline}\n            handleInputChange={setFields}\n            handleFocus={(e) => (e.target.type = 'date')}\n          />\n          <Input\n            label=\"Location\"\n            type=\"text\"\n            placeholder=\"City, Country role based on\"\n            id=\"location\"\n            defaultValue={job.location}\n            handleInputChange={setFields}\n          />\n          <Textarea\n            label=\"Job Description\"\n            maxLength={300}\n            placeholder=\"Job Description\"\n            id=\"description\"\n            defaultValue={job.description}\n            handleInputChange={setFields}\n          />\n          <InputSelect\n            label=\"Seniority Level\"\n            defaultValue={job.level}\n            handleInputChange={(e) => setLevel(e.target.value)}\n            placeholder=\"Select seniority\"\n            options={['Junior', 'Mid-Senior', 'Senior', 'Internship']}\n          />\n          <InputSelect\n            label=\"Job Type\"\n            handleInputChange={(e) => setType(e.target.value)}\n            placeholder=\"Select Job-type\"\n            options={['Full-time', 'Part-time']}\n          />\n          <p className=\"job-edit__label\">Tech Stack</p>\n          <Select\n            defaultValue={defaultTechs}\n            placeholder=\"select techs\"\n            onChange={handleChangeTech}\n            styles={selectStyles}\n            isMulti\n            name=\"tech\"\n            options={techOptions}\n          />\n\n          <div className=\"job-edit__btn-div\">\n            <Button modifier=\"light\" text=\"Update\" handleClick={updateJob} />\n          </div>\n        </form>\n      </div>\n    )\n  );\n};\n\nexport default JobEditPage;\n"]},"metadata":{},"sourceType":"module"}