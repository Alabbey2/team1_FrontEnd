{"ast":null,"code":"var _jsxFileName = \"/home/chiranjibi/Desktop/School/Telia_project/team1_FrontEnd-1/src/Components/JobCard/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport Button from '../Button';\nimport { FaHeart } from 'react-icons/fa';\nimport { FaThumbsUp } from 'react-icons/fa';\nimport { getOneTalent, likeJob, superlikeJob } from '../../services/userService';\nimport { createMatch } from '../../services/matchService';\nimport { checkMatch } from '../../Utils/checkMatch';\nimport './JobCard.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\n\nconst Jobcard = ({\n  job,\n  userId,\n  userType,\n  setStatus,\n  setPage,\n  setIsMatched\n}) => {\n  _s();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [matchType, setMatchType] = useState('');\n\n  const handleLike = async () => {\n    likeJob(userId, job.id).then(async response => {\n      if (response.data) {\n        console.log(response.data);\n        setStatus('liked');\n        setTimeout(() => {\n          setStatus('');\n        }, 500);\n        const {\n          data\n        } = await getOneTalent(userId);\n        const isMatched = checkMatch(userId, userType, job.company, data.likes, data.superLikes, null, job.id);\n\n        if (isMatched === 'match') {\n          const matchInfo = {\n            companyId: job.company.id,\n            talentId: userId,\n            type: 'match'\n          };\n          createMatch(matchInfo).then(response => {\n            if (response.data) {\n              setMatchType('match');\n              setIsModalOpen(true);\n              setIsMatched(true); //create chat group/ function here\n            }\n          });\n        }\n\n        if (isMatched === 'supermatch') {\n          const matchInfo = {\n            companyId: job.company.id,\n            talentId: userId,\n            type: 'supermatch'\n          };\n          createMatch(matchInfo).then(response => {\n            if (response.data) {\n              setMatchType('super-match');\n              setIsModalOpen(true);\n              setIsMatched(true); //create chat group/ function here\n            }\n          });\n        }\n      }\n    });\n  };\n\n  const handleSuperLike = () => {\n    superlikeJob(userId, job.id).then(async response => {\n      if (response.data) {\n        setStatus('liked');\n        setTimeout(() => {\n          setStatus('');\n        }, 500);\n        const {\n          data\n        } = await getOneTalent(userId);\n        const isMatched = checkMatch(userId, userType, job.company, data.likes, data.superLikes, null, job.id);\n\n        if (isMatched === 'match') {\n          const matchInfo = {\n            companyId: job.company.id,\n            talentId: userId,\n            type: 'match'\n          };\n          createMatch(matchInfo).then(response => {\n            if (response.data) {\n              setMatchType('match');\n              setIsModalOpen(true);\n              setIsMatched(true); //create chat group/ function here\n            }\n          });\n        }\n\n        if (isMatched === 'supermatch') {\n          const matchInfo = {\n            companyId: job.company.id,\n            talentId: userId,\n            type: 'supermatch'\n          };\n          createMatch(matchInfo).then(response => {\n            if (response.data) {\n              setMatchType('super-match');\n              setIsModalOpen(true);\n              setIsMatched(true); //create chat group/ function here\n            }\n          });\n        }\n      }\n    });\n  };\n\n  const customStyles = {\n    content: {\n      background: '#17252a',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)'\n    }\n  };\n  return job && /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"jobcard\",\n    children: [job ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jobcard__main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jobcard__head\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"jobcard__avatar\",\n            src: job.company && job.company.logo,\n            alt: \"company logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jobcard__job-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"jobcard__company\",\n              children: job.company && job.company.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"jobcard__text jobcard__text--location\",\n              children: job.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"jobcard__text jobcard__text--position\",\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"jobcard__text jobcard__text--seniority\",\n          children: [job.level, \", \\xA0\", job.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jobcard__skills\",\n          children: job.techs.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"jobcard__text jobcard__text--skill\",\n            children: [item, \", \\xA0\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"jobcard__text jobcard__text--description\",\n          children: job.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"jobcard__deadline\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Deadline: \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), job.deadline]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jobcard__icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jobcard__icon-div\",\n          children: [/*#__PURE__*/_jsxDEV(FaHeart, {\n            onClick: handleSuperLike,\n            className: \"jobcard__icon \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Super-like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jobcard__icon-div\",\n          children: [/*#__PURE__*/_jsxDEV(FaThumbsUp, {\n            onClick: handleLike,\n            className: \"jobcard__icon \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }, this) : null, /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      style: customStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsModalOpen(false),\n        className: \"close\",\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TC-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"TC-content__title\",\n          children: `It's a ${matchType}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"TC-content__text\",\n          children: `Congratulations!! it is a ${matchType}. You can now start conversation`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TC-content__btn-div\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            modifier: \"light\",\n            text: \"Start Conversation\",\n            handleClick: () => setPage('messages')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Jobcard, \"tPlWE9zZ9NY1ztSqMjXpEr2iXtk=\");\n\n_c = Jobcard;\nexport default Jobcard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jobcard\");","map":{"version":3,"sources":["/home/chiranjibi/Desktop/School/Telia_project/team1_FrontEnd-1/src/Components/JobCard/index.js"],"names":["React","useState","Modal","Button","FaHeart","FaThumbsUp","getOneTalent","likeJob","superlikeJob","createMatch","checkMatch","setAppElement","Jobcard","job","userId","userType","setStatus","setPage","setIsMatched","isModalOpen","setIsModalOpen","matchType","setMatchType","handleLike","id","then","response","data","console","log","setTimeout","isMatched","company","likes","superLikes","matchInfo","companyId","talentId","type","handleSuperLike","customStyles","content","background","top","left","right","bottom","transform","logo","name","location","title","level","techs","map","item","index","description","deadline"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\n\nimport Button from '../Button';\nimport { FaHeart } from 'react-icons/fa';\nimport { FaThumbsUp } from 'react-icons/fa';\nimport {\n  getOneTalent,\n  likeJob,\n  superlikeJob,\n} from '../../services/userService';\nimport { createMatch } from '../../services/matchService';\nimport { checkMatch } from '../../Utils/checkMatch';\n\nimport './JobCard.scss';\n\nModal.setAppElement('#root');\nconst Jobcard = ({\n  job,\n  userId,\n  userType,\n  setStatus,\n  setPage,\n  setIsMatched,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [matchType, setMatchType] = useState('');\n\n  const handleLike = async () => {\n    likeJob(userId, job.id).then(async (response) => {\n      if (response.data) {\n        console.log(response.data);\n        setStatus('liked');\n        setTimeout(() => {\n          setStatus('');\n        }, 500);\n\n        const { data } = await getOneTalent(userId);\n\n        const isMatched = checkMatch(\n          userId,\n          userType,\n          job.company,\n          data.likes,\n          data.superLikes,\n          null,\n          job.id\n        );\n        if (isMatched === 'match') {\n          const matchInfo = {\n            companyId: job.company.id,\n            talentId: userId,\n            type: 'match',\n          };\n          createMatch(matchInfo).then((response) => {\n            if (response.data) {\n              setMatchType('match');\n              setIsModalOpen(true);\n              setIsMatched(true);\n              //create chat group/ function here\n            }\n          });\n        }\n\n        if (isMatched === 'supermatch') {\n          const matchInfo = {\n            companyId: job.company.id,\n            talentId: userId,\n            type: 'supermatch',\n          };\n          createMatch(matchInfo).then((response) => {\n            if (response.data) {\n              setMatchType('super-match');\n              setIsModalOpen(true);\n              setIsMatched(true);\n              //create chat group/ function here\n            }\n          });\n        }\n      }\n    });\n  };\n\n  const handleSuperLike = () => {\n    superlikeJob(userId, job.id).then(async (response) => {\n      if (response.data) {\n        setStatus('liked');\n        setTimeout(() => {\n          setStatus('');\n        }, 500);\n\n        const { data } = await getOneTalent(userId);\n\n        const isMatched = checkMatch(\n          userId,\n          userType,\n          job.company,\n          data.likes,\n          data.superLikes,\n          null,\n          job.id\n        );\n\n        if (isMatched === 'match') {\n          const matchInfo = {\n            companyId: job.company.id,\n            talentId: userId,\n            type: 'match',\n          };\n          createMatch(matchInfo).then((response) => {\n            if (response.data) {\n              setMatchType('match');\n              setIsModalOpen(true);\n              setIsMatched(true);\n              //create chat group/ function here\n            }\n          });\n        }\n\n        if (isMatched === 'supermatch') {\n          const matchInfo = {\n            companyId: job.company.id,\n            talentId: userId,\n            type: 'supermatch',\n          };\n          createMatch(matchInfo).then((response) => {\n            if (response.data) {\n              setMatchType('super-match');\n              setIsModalOpen(true);\n              setIsMatched(true);\n              //create chat group/ function here\n            }\n          });\n        }\n      }\n    });\n  };\n\n  const customStyles = {\n    content: {\n      background: '#17252a',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\n  return (\n    job && (\n      <section className=\"jobcard\">\n        {job ? (\n          <div>\n            <div className=\"jobcard__main\">\n              <div className=\"jobcard__head\">\n                <img\n                  className=\"jobcard__avatar\"\n                  src={job.company && job.company.logo}\n                  alt=\"company logo\"\n                />\n                <div className=\"jobcard__job-info\">\n                  <h2 className=\"jobcard__company\">\n                    {job.company && job.company.name}\n                  </h2>\n                  <p className=\"jobcard__text jobcard__text--location\">\n                    {job.location}\n                  </p>\n                </div>\n              </div>\n              <p className=\"jobcard__text jobcard__text--position\">\n                {job.title}\n              </p>\n              <p className=\"jobcard__text jobcard__text--seniority\">\n                {job.level}, &nbsp;\n                {job.type}\n              </p>\n              <div className=\"jobcard__skills\">\n                {job.techs.map((item, index) => (\n                  <p className=\"jobcard__text jobcard__text--skill\" key={index}>\n                    {item}, &nbsp;\n                  </p>\n                ))}\n              </div>\n              <p className=\"jobcard__text jobcard__text--description\">\n                {job.description}\n              </p>\n              <h4 className=\"jobcard__deadline\">\n                <b>Deadline: &nbsp;</b>\n                {job.deadline}\n              </h4>\n            </div>\n            <div className=\"jobcard__icons\">\n              <div className=\"jobcard__icon-div\">\n                <FaHeart onClick={handleSuperLike} className=\"jobcard__icon \" />\n                <span>Super-like</span>\n              </div>\n              <div className=\"jobcard__icon-div\">\n                <FaThumbsUp onClick={handleLike} className=\"jobcard__icon \" />\n                <span>Like</span>\n              </div>\n            </div>\n          </div>\n        ) : null}\n        <Modal isOpen={isModalOpen} style={customStyles}>\n          <div onClick={() => setIsModalOpen(false)} className=\"close\">\n            X\n          </div>\n          <div className=\"TC-content\">\n            <h1 className=\"TC-content__title\">{`It's a ${matchType}`}</h1>\n            <p className=\"TC-content__text\">\n              {`Congratulations!! it is a ${matchType}. You can now start conversation`}\n            </p>\n            <div className=\"TC-content__btn-div\">\n              <Button\n                modifier=\"light\"\n                text=\"Start Conversation\"\n                handleClick={() => setPage('messages')}\n              />\n            </div>\n          </div>\n        </Modal>\n      </section>\n    )\n  );\n};\n\nexport default Jobcard;\n"]},"metadata":{},"sourceType":"module"}