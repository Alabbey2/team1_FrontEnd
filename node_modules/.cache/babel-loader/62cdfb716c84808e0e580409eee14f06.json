{"ast":null,"code":"var _jsxFileName = \"/home/chiranjibi/Desktop/School/Telia_project/team1_FrontEnd-1/client/src/pages/JobCreationPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Select from 'react-select';\nimport Input from '../../Components/Input';\nimport InputSelect from '../../Components/InputSelect';\nimport Textarea from '../../Components/Textarea';\nimport Button from '../../Components/Button';\nimport { useForm } from '../../hooks/useForm';\nimport { techOptions } from '../../Utils/selectOptions';\nimport './JobCreationPage.scss';\nimport { createJob } from '../../services/jobService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobCreationPage = ({\n  match\n}) => {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = match.params;\n  const [error, setError] = useState('');\n  const [level, setLevel] = useState('');\n  const [type, setType] = useState([]);\n  const [techList, setTechList] = useState([]);\n  const [fields, setFields] = useForm({\n    title: '',\n    deadline: '',\n    location: '',\n    description: ''\n  });\n  const {\n    title,\n    deadline,\n    location,\n    description\n  } = fields;\n\n  const addNewJob = e => {\n    e.preventDefault();\n    const job = {\n      company: id,\n      title,\n      deadline,\n      location,\n      description,\n      level,\n      type,\n      techs: techList\n    };\n    createJob(job).then(response => {\n      if (response.data) {\n        history.push(`/companyProfile/${id}`);\n      }\n    }).then(error => {\n      setError(error.response.data.Error);\n    });\n  };\n\n  const selectStyles = {\n    control: styles => ({ ...styles,\n      minHeight: '48px',\n      marginBottom: '10px',\n      marginTop: '10px'\n    })\n  };\n\n  const handleChangeTech = options => {\n    const techs = options.map(opt => opt.value);\n    setTechList(techs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"job-create__heading\",\n      children: \"ADD A NEW ROLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"job-create__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: error ? 'job-create__error ' : 'job-create__error--hidden',\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Job Title\",\n        id: \"title\",\n        value: title,\n        handleInputChange: setFields,\n        label: \"Job Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Deadline\",\n        id: \"deadline\",\n        value: deadline,\n        handleInputChange: setFields,\n        label: \"Deadline\",\n        handleFocus: e => e.target.type = 'date'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"City, Country role based on\",\n        id: \"location\",\n        value: location,\n        handleInputChange: setFields,\n        label: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        maxLength: 300,\n        placeholder: \"Job Description\",\n        id: \"description\",\n        value: description,\n        handleInputChange: setFields,\n        label: \"Job Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        handleInputChange: e => setLevel(e.target.value),\n        placeholder: \"Select seniority\",\n        options: ['Junior', 'Mid-Senior', 'Senior', 'Internship'],\n        label: \"Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        handleInputChange: e => setType(e.target.value),\n        placeholder: \"Select Job-type\",\n        options: ['Full-time', 'Part-time'],\n        label: \"Job Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"job-create__label\",\n        children: \"Techs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"select techs\",\n        onChange: handleChangeTech,\n        styles: selectStyles,\n        isMulti: true,\n        name: \"tech\",\n        options: techOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-create__btn-div\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          modifier: \"light\",\n          text: \"Create\",\n          handleClick: addNewJob\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobCreationPage, \"ZD5jQ54OSYNyqhpz/9eUCR98K+I=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = JobCreationPage;\nexport default JobCreationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobCreationPage\");","map":{"version":3,"sources":["/home/chiranjibi/Desktop/School/Telia_project/team1_FrontEnd-1/client/src/pages/JobCreationPage/index.js"],"names":["React","useState","useHistory","Select","Input","InputSelect","Textarea","Button","useForm","techOptions","createJob","JobCreationPage","match","history","id","params","error","setError","level","setLevel","type","setType","techList","setTechList","fields","setFields","title","deadline","location","description","addNewJob","e","preventDefault","job","company","techs","then","response","data","push","Error","selectStyles","control","styles","minHeight","marginBottom","marginTop","handleChangeTech","options","map","opt","value","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Select from 'react-select';\n\nimport Input from '../../Components/Input';\nimport InputSelect from '../../Components/InputSelect';\nimport Textarea from '../../Components/Textarea';\nimport Button from '../../Components/Button';\nimport { useForm } from '../../hooks/useForm';\nimport { techOptions } from '../../Utils/selectOptions';\n\nimport './JobCreationPage.scss';\nimport { createJob } from '../../services/jobService';\n\nconst JobCreationPage = ({ match }) => {\n  const history = useHistory();\n  const { id } = match.params;\n  const [error, setError] = useState('');\n  const [level, setLevel] = useState('');\n  const [type, setType] = useState([]);\n  const [techList, setTechList] = useState([]);\n  const [fields, setFields] = useForm({\n    title: '',\n    deadline: '',\n    location: '',\n    description: ''\n  });\n\n  const { title, deadline, location, description } = fields;\n\n  const addNewJob = (e) => {\n    e.preventDefault();\n    const job = {\n      company: id,\n      title,\n      deadline,\n      location,\n      description,\n      level,\n      type,\n      techs: techList\n    };\n\n    createJob(job)\n      .then((response) => {\n        if (response.data) {\n          history.push(`/companyProfile/${id}`);\n        }\n      })\n      .then((error) => {\n        setError(error.response.data.Error);\n      });\n  };\n\n  const selectStyles = {\n    control: (styles) => ({ ...styles, minHeight: '48px', marginBottom: '10px', marginTop: '10px' })\n  };\n\n  const handleChangeTech = (options) => {\n    const techs = options.map((opt) => opt.value);\n    setTechList(techs);\n  };\n\n  return (\n    <div className=\"job-create\">\n      <h3 className=\"job-create__heading\">ADD A NEW ROLE</h3>\n      <form className=\"job-create__form\">\n        <p className={error ? 'job-create__error ' : 'job-create__error--hidden'}>{error}</p>\n        <Input\n          type=\"text\"\n          placeholder=\"Job Title\"\n          id=\"title\"\n          value={title}\n          handleInputChange={setFields}\n          label=\"Job Title\"\n        />\n        <Input\n          type=\"text\"\n          placeholder=\"Deadline\"\n          id=\"deadline\"\n          value={deadline}\n          handleInputChange={setFields}\n          label=\"Deadline\"\n          handleFocus={(e) => (e.target.type = 'date')}\n        />\n        <Input\n          type=\"text\"\n          placeholder=\"City, Country role based on\"\n          id=\"location\"\n          value={location}\n          handleInputChange={setFields}\n          label=\"Location\"\n        />\n        <Textarea\n          maxLength={300}\n          placeholder=\"Job Description\"\n          id=\"description\"\n          value={description}\n          handleInputChange={setFields}\n          label=\"Job Description\"\n        />\n        <InputSelect\n          handleInputChange={(e) => setLevel(e.target.value)}\n          placeholder=\"Select seniority\"\n          options={['Junior', 'Mid-Senior', 'Senior', 'Internship']}\n          label=\"Level\"\n        />\n        <InputSelect\n          handleInputChange={(e) => setType(e.target.value)}\n          placeholder=\"Select Job-type\"\n          options={['Full-time', 'Part-time']}\n          label=\"Job Type\"\n        />\n        <p className=\"job-create__label\">Techs</p>\n        <Select\n          placeholder=\"select techs\"\n          onChange={handleChangeTech}\n          styles={selectStyles}\n          isMulti\n          name=\"tech\"\n          options={techOptions}\n        />\n\n        <div className=\"job-create__btn-div\">\n          <Button modifier=\"light\" text=\"Create\" handleClick={addNewJob} />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default JobCreationPage;\n"]},"metadata":{},"sourceType":"module"}