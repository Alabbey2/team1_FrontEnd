{"ast":null,"code":"var _jsxFileName = \"/home/chiranjibi/Desktop/School/Telia_project/team1_FrontEnd-1/client/src/Components/JobCard/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport Button from '../Button';\nimport { FaHeart } from 'react-icons/fa';\nimport { FaThumbsUp } from 'react-icons/fa';\nimport { getOneTalent, likeJob, superlikeJob } from '../../services/userService';\nimport { createMatch } from '../../services/matchService';\nimport { checkMatch } from '../../Utils/checkMatch';\nimport './JobCard.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\n\nconst Jobcard = ({\n  job,\n  userId,\n  userType,\n  setStatus,\n  setPage\n}) => {\n  _s();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [matchType, setMatchType] = useState('');\n\n  const handleLike = async () => {\n    likeJob(userId, job.id).then(async response => {\n      if (response.data) {\n        console.log(response.data);\n        setStatus('liked');\n        setTimeout(() => {\n          setStatus('');\n        }, 500);\n        const {\n          data\n        } = await getOneTalent(userId);\n        const isMatched = checkMatch(userId, userType, job.company, data.likes, data.superLikes, null, job.id);\n\n        if (isMatched === 'match') {\n          const matchInfo = {\n            companyId: job.company.id,\n            talentId: userId,\n            type: 'match'\n          };\n          createMatch(matchInfo).then(response => {\n            if (response.data) {\n              setMatchType('match');\n              setIsModalOpen(true);\n            }\n          });\n        }\n\n        if (isMatched === 'supermatch') {\n          const matchInfo = {\n            companyId: job.company.id,\n            talentId: userId,\n            type: 'supermatch'\n          };\n          createMatch(matchInfo).then(response => {\n            if (response.data) {\n              setMatchType('super-match');\n              setIsModalOpen(true);\n            }\n          });\n        }\n      }\n    });\n  };\n\n  const handleSuperLike = () => {\n    superlikeJob(userId, job.id).then(async response => {\n      if (response.data) {\n        console.log(response.data);\n        setStatus('liked');\n        setTimeout(() => {\n          setStatus('');\n        }, 500);\n        const {\n          data\n        } = await getOneTalent(userId);\n        const isMatched = checkMatch(userId, userType, job.company, data.likes, data.superLikes, null, job.id);\n\n        if (isMatched === 'match') {\n          const matchInfo = {\n            companyId: job.company.id,\n            talentId: userId,\n            type: 'match'\n          };\n          createMatch(matchInfo).then(response => {\n            if (response.data) {\n              setMatchType('match');\n              setIsModalOpen(true);\n            }\n          });\n        }\n\n        if (isMatched === 'supermatch') {\n          const matchInfo = {\n            companyId: job.company.id,\n            talentId: userId,\n            type: 'supermatch'\n          };\n          createMatch(matchInfo).then(response => {\n            if (response.data) {\n              setMatchType('super-match');\n              setIsModalOpen(true);\n            }\n          });\n        }\n      }\n    });\n  };\n\n  const customStyles = {\n    content: {\n      background: '#17252a',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"jobcard\",\n    children: [job ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jobcard__main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jobcard__head\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"jobcard__avatar\",\n            src: job.company && job.company.logo,\n            alt: \"company logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jobcard__job-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"jobcard__company\",\n              children: job.company && job.company.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"jobcard__text jobcard__text--location\",\n              children: job.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"jobcard__text jobcard__text--position\",\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"jobcard__text jobcard__text--seniority\",\n          children: [job.level, \", \\xA0\", job.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jobcard__skills\",\n          children: job.techs.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"jobcard__text jobcard__text--skill\",\n            children: [item, \", \\xA0\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"jobcard__text jobcard__text--description\",\n          children: job.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"jobcard__deadline\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Deadline: \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), job.deadline]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jobcard__icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jobcard__icon-div\",\n          children: [/*#__PURE__*/_jsxDEV(FaHeart, {\n            onClick: handleSuperLike,\n            className: \"jobcard__icon \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"super-like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FaThumbsUp, {\n            onClick: handleLike,\n            className: \"jobcard__icon \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"super-like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      style: customStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsModalOpen(false),\n        className: \"close\",\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TC-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"TC-content__title\",\n          children: `It's a ${matchType}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"TC-content__text\",\n          children: `Congratulations!! it is a ${matchType}. You can now start conversation`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TC-content__btn-div\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            modifier: \"light\",\n            text: \"Start Conversation\",\n            handleClick: () => setPage('messages')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Jobcard, \"tPlWE9zZ9NY1ztSqMjXpEr2iXtk=\");\n\n_c = Jobcard;\nexport default Jobcard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jobcard\");","map":{"version":3,"sources":["/home/chiranjibi/Desktop/School/Telia_project/team1_FrontEnd-1/client/src/Components/JobCard/index.js"],"names":["React","useState","Modal","Button","FaHeart","FaThumbsUp","getOneTalent","likeJob","superlikeJob","createMatch","checkMatch","setAppElement","Jobcard","job","userId","userType","setStatus","setPage","isModalOpen","setIsModalOpen","matchType","setMatchType","handleLike","id","then","response","data","console","log","setTimeout","isMatched","company","likes","superLikes","matchInfo","companyId","talentId","type","handleSuperLike","customStyles","content","background","top","left","right","bottom","transform","logo","name","location","title","level","techs","map","item","index","description","deadline"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\n\nimport Button from '../Button';\nimport { FaHeart } from 'react-icons/fa';\nimport { FaThumbsUp } from 'react-icons/fa';\nimport { getOneTalent, likeJob, superlikeJob } from '../../services/userService';\nimport { createMatch } from '../../services/matchService';\nimport { checkMatch } from '../../Utils/checkMatch';\n\nimport './JobCard.scss';\n\nModal.setAppElement('#root');\nconst Jobcard = ({ job, userId, userType, setStatus, setPage }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [matchType, setMatchType] = useState('');\n\n  const handleLike = async () => {\n    likeJob(userId, job.id).then(async (response) => {\n      if (response.data) {\n        console.log(response.data);\n        setStatus('liked');\n        setTimeout(() => {\n          setStatus('');\n        }, 500);\n\n        const { data } = await getOneTalent(userId);\n\n        const isMatched = checkMatch(\n          userId,\n          userType,\n          job.company,\n          data.likes,\n          data.superLikes,\n          null,\n          job.id\n        );\n        if (isMatched === 'match') {\n          const matchInfo = { companyId: job.company.id, talentId: userId, type: 'match' };\n          createMatch(matchInfo).then((response) => {\n            if (response.data) {\n              setMatchType('match');\n              setIsModalOpen(true);\n            }\n          });\n        }\n\n        if (isMatched === 'supermatch') {\n          const matchInfo = { companyId: job.company.id, talentId: userId, type: 'supermatch' };\n          createMatch(matchInfo).then((response) => {\n            if (response.data) {\n              setMatchType('super-match');\n              setIsModalOpen(true);\n            }\n          });\n        }\n      }\n    });\n  };\n\n  const handleSuperLike = () => {\n    superlikeJob(userId, job.id).then(async (response) => {\n      if (response.data) {\n        console.log(response.data);\n        setStatus('liked');\n        setTimeout(() => {\n          setStatus('');\n        }, 500);\n\n        const { data } = await getOneTalent(userId);\n\n        const isMatched = checkMatch(\n          userId,\n          userType,\n          job.company,\n          data.likes,\n          data.superLikes,\n          null,\n          job.id\n        );\n\n        if (isMatched === 'match') {\n          const matchInfo = { companyId: job.company.id, talentId: userId, type: 'match' };\n          createMatch(matchInfo).then((response) => {\n            if (response.data) {\n              setMatchType('match');\n              setIsModalOpen(true);\n            }\n          });\n        }\n\n        if (isMatched === 'supermatch') {\n          const matchInfo = { companyId: job.company.id, talentId: userId, type: 'supermatch' };\n          createMatch(matchInfo).then((response) => {\n            if (response.data) {\n              setMatchType('super-match');\n              setIsModalOpen(true);\n            }\n          });\n        }\n      }\n    });\n  };\n\n  const customStyles = {\n    content: {\n      background: '#17252a',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)'\n    }\n  };\n\n  return (\n    <section className=\"jobcard\">\n      {job ? (\n        <div>\n          <div className=\"jobcard__main\">\n            <div className=\"jobcard__head\">\n              <img\n                className=\"jobcard__avatar\"\n                src={job.company && job.company.logo}\n                alt=\"company logo\"\n              />\n              <div className=\"jobcard__job-info\">\n                <h2 className=\"jobcard__company\">{job.company && job.company.name}</h2>\n                <p className=\"jobcard__text jobcard__text--location\">{job.location}</p>\n              </div>\n            </div>\n            <p className=\"jobcard__text jobcard__text--position\">{job.title}</p>\n            <p className=\"jobcard__text jobcard__text--seniority\">\n              {job.level}, &nbsp;\n              {job.type}\n            </p>\n            <div className=\"jobcard__skills\">\n              {job.techs.map((item, index) => (\n                <p className=\"jobcard__text jobcard__text--skill\" key={index}>\n                  {item}, &nbsp;\n                </p>\n              ))}\n            </div>\n            <p className=\"jobcard__text jobcard__text--description\">{job.description}</p>\n            <h4 className=\"jobcard__deadline\">\n              <b>Deadline: &nbsp;</b>\n              {job.deadline}\n            </h4>\n          </div>\n          <div className=\"jobcard__icons\">\n            <div className=\"jobcard__icon-div\">\n              <FaHeart onClick={handleSuperLike} className=\"jobcard__icon \" />\n              <span>super-like</span>\n            </div>\n            <div>\n              <FaThumbsUp onClick={handleLike} className=\"jobcard__icon \" />\n              <span>super-like</span>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      <Modal isOpen={isModalOpen} style={customStyles}>\n        <div onClick={() => setIsModalOpen(false)} className=\"close\">\n          X\n        </div>\n        <div className=\"TC-content\">\n          <h1 className=\"TC-content__title\">{`It's a ${matchType}`}</h1>\n          <p className=\"TC-content__text\">\n            {`Congratulations!! it is a ${matchType}. You can now start conversation`}\n          </p>\n          <div className=\"TC-content__btn-div\">\n            <Button\n              modifier=\"light\"\n              text=\"Start Conversation\"\n              handleClick={() => setPage('messages')}\n            />\n          </div>\n        </div>\n      </Modal>\n    </section>\n  );\n};\n\nexport default Jobcard;\n"]},"metadata":{},"sourceType":"module"}