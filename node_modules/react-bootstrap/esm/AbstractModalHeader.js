import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import * as React from 'react';
import { useContext } from 'react';
import useEventCallback from '@restart/hooks/useEventCallback';
import CloseButton from './CloseButton';
import ModalContext from './ModalContext';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var defaultProps = {
  closeLabel: 'Close',
  closeButton: false
};
var AbstractModalHeader = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var closeLabel = _ref.closeLabel,
      closeVariant = _ref.closeVariant,
      closeButton = _ref.closeButton,
      onHide = _ref.onHide,
      children = _ref.children,
      props = _objectWithoutPropertiesLoose(_ref, ["closeLabel", "closeVariant", "closeButton", "onHide", "children"]);

  var context = useContext(ModalContext);
  var handleClick = useEventCallback(function () {
    context == null ? void 0 : context.onHide();
    onHide == null ? void 0 : onHide();
  });
  return /*#__PURE__*/_jsxs("div", _extends({
    ref: ref
  }, props, {
    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {
      "aria-label": closeLabel,
      variant: closeVariant,
      onClick: handleClick
    })]
  }));
});
AbstractModalHeader.defaultProps = defaultProps;
export default AbstractModalHeader;